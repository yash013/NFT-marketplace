{"ast":null,"code":"var _jsxFileName = \"E:\\\\Road_to_web3\\\\RTW3-Week7-NFT-Marketplace\\\\src\\\\components\\\\NFTpage.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport axie from \"../tile.jpeg\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NFTPage(props) {\n  _s();\n  const [data, updateData] = useState({});\n  const [message, updateMessage] = useState(\"\");\n  const [currAddress, updateCurrAddress] = useState(\"0x\");\n  async function getNFTData(tokenId) {\n    const ethers = require(\"ethers\");\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n    //create an NFT Token\n    const tokenURI = await contract.tokenURI(tokenId);\n    const listedToken = await contract.getListedTokenForId(tokenId);\n    let meta = await axios.get(tokenURI);\n    meta = meta.data;\n    console.log(listedToken);\n    let item = {\n      price: meta.price,\n      tokenId: tokenId,\n      seller: listedToken.seller,\n      owner: listedToken.owner,\n      image: meta.image,\n      name: meta.name,\n      description: meta.description\n    };\n    console.log(item);\n    updateData(item);\n  }\n  async function buyNFT(tokenId) {\n    try {\n      const ethers = require(\"ethers\");\n      //After adding your Hardhat network to your metamask, this code will get providers and signers\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      //Pull the deployed contract instance\n      let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n      const salePrice = ethers.utils.parseUnits(data.price, 'ether');\n      let transaction = await contract.executeSale(tokenId, {\n        value: salePrice\n      });\n      await transaction.wait();\n      alert('You successfully bought the NFT!');\n    } catch (e) {\n      alert(\"Upload Error\" + e);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"min-height\": \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex ml-20 mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.image,\n        alt: \"\",\n        className: \"w-2/5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl ml-20 space-y-8 text-white shadow-2xl rounded-lg border-2 p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name: \", data.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Description: \", data.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Price: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\",\n            children: data.price + \" ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Owner: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: data.owner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Seller: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: data.seller\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [currAddress == data.owner || currAddress == data.seller ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-emerald-700\",\n            children: \"You are the owner of this NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\",\n            children: \"Buy this NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green text-center mt-3\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(NFTPage, \"tEP7Uk1PZp8rFU9PODbq9q6UeOo=\");\n_c = NFTPage;\nvar _c;\n$RefreshReg$(_c, \"NFTPage\");","map":{"version":3,"names":["Navbar","axie","useLocation","useParams","MarketplaceJSON","axios","useState","NFTPage","props","data","updateData","message","updateMessage","currAddress","updateCurrAddress","getNFTData","tokenId","ethers","require","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","address","abi","tokenURI","listedToken","getListedTokenForId","meta","get","console","log","item","price","seller","owner","image","name","description","buyNFT","salePrice","utils","parseUnits","transaction","executeSale","value","wait","alert","e"],"sources":["E:/Road_to_web3/RTW3-Week7-NFT-Marketplace/src/components/NFTpage.js"],"sourcesContent":["import Navbar from \"./Navbar\";\r\nimport axie from \"../tile.jpeg\";\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function NFTPage (props) {\r\n\r\nconst [data, updateData] = useState({});\r\nconst [message, updateMessage] = useState(\"\");\r\nconst [currAddress, updateCurrAddress] = useState(\"0x\");\r\nasync function getNFTData(tokenId) {\r\n    const ethers = require(\"ethers\");\r\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    //Pull the deployed contract instance\r\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer)\r\n    //create an NFT Token\r\n    const tokenURI = await contract.tokenURI(tokenId);\r\n    const listedToken = await contract.getListedTokenForId(tokenId);\r\n    let meta = await axios.get(tokenURI);\r\n    meta = meta.data;\r\n    console.log(listedToken);\r\n\r\n    let item = {\r\n        price: meta.price,\r\n        tokenId: tokenId,\r\n        seller: listedToken.seller,\r\n        owner: listedToken.owner,\r\n        image: meta.image,\r\n        name: meta.name,\r\n        description: meta.description,\r\n    }\r\n    console.log(item);\r\n    updateData(item);\r\n}\r\n\r\nasync function buyNFT(tokenId) {\r\n    try {\r\n        const ethers = require(\"ethers\");\r\n        //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        //Pull the deployed contract instance\r\n        let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\r\n        const salePrice = ethers.utils.parseUnits(data.price, 'ether')\r\n        let transaction = await contract.executeSale(tokenId, {value:salePrice});\r\n        await transaction.wait();\r\n\r\n        alert('You successfully bought the NFT!');\r\n    }\r\n    catch(e) {\r\n        alert(\"Upload Error\"+e)\r\n    }\r\n}\r\n\r\n    return(\r\n        <div style={{\"min-height\":\"100vh\"}}>\r\n            <Navbar></Navbar>\r\n            <div className=\"flex ml-20 mt-20\">\r\n                <img src={data.image} alt=\"\" className=\"w-2/5\" />\r\n                <div className=\"text-xl ml-20 space-y-8 text-white shadow-2xl rounded-lg border-2 p-5\">\r\n                    <div>\r\n                        Name: {data.name}\r\n                    </div>\r\n                    <div>\r\n                        Description: {data.description}\r\n                    </div>\r\n                    <div>\r\n                        Price: <span className=\"\">{data.price + \" ETH\"}</span>\r\n                    </div>\r\n                    <div>\r\n                        Owner: <span className=\"text-sm\">{data.owner}</span>\r\n                    </div>\r\n                    <div>\r\n                        Seller: <span className=\"text-sm\">{data.seller}</span>\r\n                    </div>\r\n                    <div>\r\n                    { currAddress == data.owner || currAddress == data.seller ?\r\n                        <div className=\"text-emerald-700\">You are the owner of this NFT</div>\r\n                        : <button className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\">Buy this NFT</button>\r\n                    }\r\n                    \r\n                    <div className=\"text-green text-center mt-3\">{message}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}