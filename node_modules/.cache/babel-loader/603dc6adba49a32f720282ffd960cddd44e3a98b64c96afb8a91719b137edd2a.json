{"ast":null,"code":"var _jsxFileName = \"E:\\\\Road_to_web3\\\\RTW3-Week7-NFT-Marketplace\\\\src\\\\components\\\\Marketplace.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport NFTTile from \"./NFTTile\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Marketplace() {\n  _s();\n  // const sampleData = [\n  //     {\n  //         \"name\": \"NFT#1\",\n  //         \"description\": \"Alchemy's First NFT\",\n  //         \"website\":\"http://axieinfinity.io\",\n  //         \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n  //         \"price\":\"0.03ETH\",\n  //         \"currentlySelling\":\"True\",\n  //         \"address\":\"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\",\n  //     },\n  //     {\n  //         \"name\": \"NFT#2\",\n  //         \"description\": \"Alchemy's Second NFT\",\n  //         \"website\":\"http://axieinfinity.io\",\n  //         \"image\":\"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\n  //         \"price\":\"0.03ETH\",\n  //         \"currentlySelling\":\"True\",\n  //         \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\n  //     },\n  //     {\n  //         \"name\": \"NFT#3\",\n  //         \"description\": \"Alchemy's Third NFT\",\n  //         \"website\":\"http://axieinfinity.io\",\n  //         \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n  //         \"price\":\"0.03ETH\",\n  //         \"currentlySelling\":\"True\",\n  //         \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\n  //     },\n  // ];\n  // const [data, updateData] = useState(sampleData);\n  const [dataFetched, updateFetched] = useState(false);\n  async function getAllNFTs() {\n    const ethers = require(\"ethers\");\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n    //create an NFT Token\n    let transaction = await contract.getAllNFTs();\n\n    //Fetch all the details of every NFT from the contract and display\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios.get(tokenURI);\n      meta = meta.data;\n      let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: meta.image,\n        name: meta.name,\n        description: meta.description\n      };\n      return item;\n    }));\n    updateFetched(true);\n    updateData(items);\n  }\n  if (!dataFetched) getAllNFTs();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col place-items-center mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:text-xl font-bold text-white\",\n        children: \"Top NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\",\n        children: data.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(NFTTile, {\n            data: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Marketplace, \"M8Zuej1HASHHWugkoovH+lBpduQ=\");\n_c = Marketplace;\nvar _c;\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["Navbar","NFTTile","MarketplaceJSON","axios","useState","Marketplace","dataFetched","updateFetched","getAllNFTs","ethers","require","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","address","abi","transaction","items","Promise","all","map","i","tokenURI","tokenId","meta","get","data","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","updateData","value","index"],"sources":["E:/Road_to_web3/RTW3-Week7-NFT-Marketplace/src/components/Marketplace.js"],"sourcesContent":["import Navbar from \"./Navbar\";\r\nimport NFTTile from \"./NFTTile\";\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Marketplace() {\r\n// const sampleData = [\r\n//     {\r\n//         \"name\": \"NFT#1\",\r\n//         \"description\": \"Alchemy's First NFT\",\r\n//         \"website\":\"http://axieinfinity.io\",\r\n//         \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\r\n//         \"price\":\"0.03ETH\",\r\n//         \"currentlySelling\":\"True\",\r\n//         \"address\":\"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\",\r\n//     },\r\n//     {\r\n//         \"name\": \"NFT#2\",\r\n//         \"description\": \"Alchemy's Second NFT\",\r\n//         \"website\":\"http://axieinfinity.io\",\r\n//         \"image\":\"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\r\n//         \"price\":\"0.03ETH\",\r\n//         \"currentlySelling\":\"True\",\r\n//         \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\r\n//     },\r\n//     {\r\n//         \"name\": \"NFT#3\",\r\n//         \"description\": \"Alchemy's Third NFT\",\r\n//         \"website\":\"http://axieinfinity.io\",\r\n//         \"image\":\"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\r\n//         \"price\":\"0.03ETH\",\r\n//         \"currentlySelling\":\"True\",\r\n//         \"address\":\"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\r\n//     },\r\n// ];\r\n// const [data, updateData] = useState(sampleData);\r\nconst [dataFetched, updateFetched] = useState(false);\r\n\r\nasync function getAllNFTs() {\r\n    const ethers = require(\"ethers\");\r\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    //Pull the deployed contract instance\r\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer)\r\n    //create an NFT Token\r\n    let transaction = await contract.getAllNFTs()\r\n\r\n    //Fetch all the details of every NFT from the contract and display\r\n    const items = await Promise.all(transaction.map(async i => {\r\n        const tokenURI = await contract.tokenURI(i.tokenId);\r\n        let meta = await axios.get(tokenURI);\r\n        meta = meta.data;\r\n\r\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\r\n        let item = {\r\n            price,\r\n            tokenId: i.tokenId.toNumber(),\r\n            seller: i.seller,\r\n            owner: i.owner,\r\n            image: meta.image,\r\n            name: meta.name,\r\n            description: meta.description,\r\n        }\r\n        return item;\r\n    }))\r\n\r\n    updateFetched(true);\r\n    updateData(items);\r\n}\r\n\r\nif(!dataFetched)\r\n    getAllNFTs();\r\n\r\nreturn (\r\n    <div>\r\n        <Navbar></Navbar>\r\n        <div className=\"flex flex-col place-items-center mt-20\">\r\n            <div className=\"md:text-xl font-bold text-white\">\r\n                Top NFTs\r\n            </div>\r\n            <div className=\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\">\r\n                {data.map((value, index) => {\r\n                    return <NFTTile data={value} key={index}></NFTTile>;\r\n                })}\r\n            </div>\r\n        </div>            \r\n    </div>\r\n);\r\n\r\n}"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,eAAe,SAASC,WAAW,GAAG;EAAA;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EAEpD,eAAeI,UAAU,GAAG;IACxB,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;IAChC;IACA,MAAMC,QAAQ,GAAG,IAAIF,MAAM,CAACG,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAS,EAAE;IACnC;IACA,IAAIC,QAAQ,GAAG,IAAIT,MAAM,CAACU,QAAQ,CAACjB,eAAe,CAACkB,OAAO,EAAElB,eAAe,CAACmB,GAAG,EAAEL,MAAM,CAAC;IACxF;IACA,IAAIM,WAAW,GAAG,MAAMJ,QAAQ,CAACV,UAAU,EAAE;;IAE7C;IACA,MAAMe,KAAK,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACH,WAAW,CAACI,GAAG,CAAC,MAAMC,CAAC,IAAI;MACvD,MAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACU,QAAQ,CAACD,CAAC,CAACE,OAAO,CAAC;MACnD,IAAIC,IAAI,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAACH,QAAQ,CAAC;MACpCE,IAAI,GAAGA,IAAI,CAACE,IAAI;MAEhB,IAAIC,KAAK,GAAGxB,MAAM,CAACyB,KAAK,CAACC,WAAW,CAACR,CAAC,CAACM,KAAK,CAACG,QAAQ,EAAE,EAAE,OAAO,CAAC;MACjE,IAAIC,IAAI,GAAG;QACPJ,KAAK;QACLJ,OAAO,EAAEF,CAAC,CAACE,OAAO,CAACS,QAAQ,EAAE;QAC7BC,MAAM,EAAEZ,CAAC,CAACY,MAAM;QAChBC,KAAK,EAAEb,CAAC,CAACa,KAAK;QACdC,KAAK,EAAEX,IAAI,CAACW,KAAK;QACjBC,IAAI,EAAEZ,IAAI,CAACY,IAAI;QACfC,WAAW,EAAEb,IAAI,CAACa;MACtB,CAAC;MACD,OAAON,IAAI;IACf,CAAC,CAAC,CAAC;IAEH9B,aAAa,CAAC,IAAI,CAAC;IACnBqC,UAAU,CAACrB,KAAK,CAAC;EACrB;EAEA,IAAG,CAACjB,WAAW,EACXE,UAAU,EAAE;EAEhB,oBACI;IAAA,wBACI,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eACjB;MAAK,SAAS,EAAC,wCAAwC;MAAA,wBACnD;QAAK,SAAS,EAAC,iCAAiC;QAAA,UAAC;MAEjD;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAK,SAAS,EAAC,iEAAiE;QAAA,UAC3EwB,IAAI,CAACN,GAAG,CAAC,CAACmB,KAAK,EAAEC,KAAK,KAAK;UACxB,oBAAO,QAAC,OAAO;YAAC,IAAI,EAAED;UAAM,GAAMC,KAAK;YAAA;YAAA;YAAA;UAAA,QAAY;QACvD,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAGV;AAAC,GArFuBzC,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}